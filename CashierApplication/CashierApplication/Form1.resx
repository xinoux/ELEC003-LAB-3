<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>